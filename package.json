{
  "name": "ocaml-formatter",
  "displayName": "OCaml Formatter",
  "description": "Formatter for OCaml language",
  "version": "2.0.5",
  "license": "MIT",
  "publisher": "badochov",
  "icon": "assets/logo.png",
  "categories": [
    "Formatters"
  ],
  "keywords": [
    "ocaml",
    "ocamlformat",
    "format",
    "formatting",
    "formatter",
    "merlin"
  ],
  "bugs": {
    "url": "https://github.com/badochov/ocamlformatter-vscode/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/badochov/ocamlformatter-vscode.git"
  },
  "engines": {
    "vscode": "^1.43.0"
  },
  "activationEvents": [
    "onLanguage:ocaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ocaml-formatter.runCodeFragment",
        "title": "Run code fragment in REPL"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "when": "resourceLangId == ocaml",
          "command": "ocaml-formatter.runCodeFragment",
          "group": "OcamlFormatter@1"
        }
      ]
    },
    "languages": [
      {
        "id": "ocaml",
        "extensions": [
          ".ml",
          ".mli"
        ]
      }
    ],
    "configuration": {
      "title": "OCaml Formatter",
      "properties": {
        "ocaml-formatter.profile": {
          "title": "ocamlformat profile",
          "type": "string",
          "default": "conventional",
          "enum": [
            "conventional",
            "janestreet",
            "ocamlformat",
            "own"
          ],
          "description": "Choose the formatting profile (`own` is the one defined in the .ocamlformat file in project's root directory (see `ocamlformat` for definition))."
        },
        "ocaml-formatter.ocamlformat-path": {
          "title": "Path to ocamlformat",
          "type": "string",
          "default": "ocamlformat",
          "description": "Choose the path to `ocamlformat` if it's not installed globally."
        },
        "ocaml-formatter.ocaml-repl-startup-delay": {
          "title": "OCaml REPL startup delay",
          "type": "number",
          "default": 500,
          "description": "Specifies how long should the extension wait between starting REPL and executing program"
        },
        "ocaml-formatter.eval-opam-env": {
          "title": "Eval opam env before every run",
          "type": "boolean",
          "default": false,
          "description": "Evals `opam` env at every run if set to true."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run lint && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile",
    "test": "node ./out/test/runTest.js",
    "lint": "eslint ./src --ext .ts"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "^18.0.0",
    "@types/vscode": "~1.43.0",
    "@typescript-eslint/eslint-plugin": "^5.29.0",
    "@typescript-eslint/parser": "^5.29.0",
    "eslint": "^8.18.0",
    "eslint-config-google": "^0.14.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.0.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "prettier": "^2.7.1",
    "typescript": "^4.7.4",
    "vscode-test": "^1.4.0"
  }
}